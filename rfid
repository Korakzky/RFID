#include <SPI.h>#include <MFRC522.h>#include <LiquidCrystal_I2C.h>#include <Wire.h>#define I2C_ADDR 0x3F#define LCD_COLUMNS 20#define LCD_ROWS 4#define RST_PIN 0
#define SS_PIN 5#define BOOT_3P_RELAY 25#define BOOT_1P_RELAY 26 #define CAR_RELAY 27#define BUTTON_3P_PIN 32 #define BUTTON_1P_PIN 33 #define BUTTON_CAR_PIN 35 
byte startCardUID[4] = {0};byte registeredCards[2][4] = {{0x14, 0x84, 0xAA, 0x5E},{0xB9, 0xFD, 0x79, 0xE2}};MFRC522 mfrc522(SS_PIN, RST_PIN);LiquidCrystal_I2C lcd(I2C_ADDR, LCD_COLUMNS, LCD_ROWS);
void setup() {Serial.begin(115200);SPI.begin();mfrc522.PCD_Init();Wire.begin();lcd.begin(20, 4);lcd.init();lcd.noCursor();lcd.backlight();lcd.setCursor(0, 0);lcd.clear();
digitalWrite(BOOT_3P_RELAY, LOW);digitalWrite(BOOT_1P_RELAY, LOW);digitalWrite(CAR_RELAY, LOW);pinMode(BOOT_3P_RELAY, OUTPUT);pinMode(BOOT_1P_RELAY, OUTPUT);
pinMode(CAR_RELAY, OUTPUT);pinMode(BUTTON_3P_PIN, INPUT_PULLUP);pinMode(BUTTON_1P_PIN, INPUT_PULLUP);pinMode(BUTTON_CAR_PIN, INPUT_PULLUP);
delay(200);Serial.println("Scan uw kaart"); lcd.print("Scan uw kaart");}void loop() {if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {byte cardUID[4];
for (byte i = 0; i < 4; i++) {cardUID[i] = mfrc522.uid.uidByte[i];}lcd.clear();lcd.print("Kaart UID: %02X %02X %02X %02X\n", cardUID[0], cardUID[1], cardUID[2], cardUID[3]");
bool isRegistered = false;for (byte i = 0; i < 2; i++) {if (memcmp(cardUID, registeredCards[i], 4) == 0) {isRegistered = true;memcpy(startCardUID, cardUID, 4);
break;}}if (!isRegistered) {lcd.clear();lcd.print("Deze kaart is niet geregistreerd.");lcd.scrollDisplayLeft();delay(200);mfrc522.PICC_HaltA();mfrc522.PCD_StopCrypto1();
return;}lcd.clear();lcd.println("Selecteer een optie:");lcd.println("1: 3 fasig laden (boot)");lcd.println("2: Enkelfasig laden (boot)");lcd.println("3: Laden (auto)");
bool optionSelected = false;byte selectedOption = 0;while (!optionSelected) {if (digitalRead(BUTTON_3P_PIN) == LOW) {selectedOption = 1;optionSelected = true;}else if (digitalRead(BUTTON_1P_PIN) == LOW) {selectedOption = 2;optionSelected = true;}
else if (digitalRead(BUTTON_CAR_PIN) == LOW) {selectedOption = 3;optionSelected = true;}}switch (selectedOption) {case 1:digitalWrite(BOOT_3P_RELAY, HIGH);
lcd.clear();lcd.print("3 fasig laden (boot) is ingeschakeld.");lcd.scrollDisplayLeft();delay(200);lcd.clear();lcd.print("Scan dezelfde kaart om het laden te stoppen.");
lcd.scrollDisplayLeft();delay(200);break;case 2:digitalWrite(BOOT_1P_RELAY, HIGH);lcd.clear();lcd.print("Enkelfasig laden (boot) is ingeschakeld.");lcd.scrollDisplayLeft();
delay(200);lcd.clear();lcd.print("Scan dezelfde kaart om het laden te stoppen.");lcd.scrollDisplayLeft();delay(200);break;case 3:digitalWrite(CAR_RELAY, HIGH);lcd.clear();lcd.print("Laden (auto) is ingeschakeld.");lcd.scrollDisplayLeft();delay(200);lcd.clear();
lcd.print("Scan dezelfde kaart om het laden te stoppen.");lcd.scrollDisplayLeft();delay(200);break;}byte previousUid[mfrc522.uid.size] = {0};bool firstCardScanned = false;
bool isCharging = true;//byte previousUid[10] = {0};while (isCharging) {if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {byte currentUid[10];
memcpy(currentUid, mfrc522.uid.uidByte, mfrc522.uid.size);if (memcmp(currentUid, startCardUID, mfrc522.uid.size) == 0) {lcd.clear();lcd.print("Dezelfde kaart is gescand. Het laden is gestopt.");
lcd.scrollDisplayLeft();delay(200);isCharging = false;break; } else if (memcmp(currentUid, previousUid, mfrc522.uid.size) != 0) {lcd.clear();lcd.print("Dezelfde kaart is gescand. Het laden is gestopt.");
lcd.scrollDisplayLeft();delay(200);memcpy(previousUid, currentUid, mfrc522.uid.size);}}}switch (selectedOption) {case 1:digitalWrite(BOOT_3P_RELAY, LOW);lcd.clear();
lcd.print("3 fasig laden (boot) is uitgeschakeld."); lcd.scrollDisplayLeft(); delay(200); break;case 2:digitalWrite(BOOT_1P_RELAY, LOW);lcd.clear();lcd.print("Enkelfasig laden (boot) is uitgeschakeld.");lcd.scrollDisplayLeft();
delay(200);break;case 3:digitalWrite(CAR_RELAY, LOW);lcd.clear();lcd.print("Laden (auto) is uitgeschakeld.");lcd.scrollDisplayLeft();delay(200);break;}mfrc522.PICC_HaltA();
mfrc522.PCD_StopCrypto1();}}
