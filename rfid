#include <SPI.h>
#include <MFRC522.h>
#include <LiquidCrystal_I2C.h>                                        //SCHERM
#include <Wire.h>                                                     //SCHERM

#define I2C_ADDR 0x3F                                                 //SCHERM
#define LCD_COLUMNS 20                                                //SCHERM
#define LCD_ROWS 4                                                    //SCHERM


#define RST_PIN         0          // Reset pin
#define SS_PIN          5          // Slave Select pin
#define BOOT_3P_RELAY   25         // Relay pin for 3-phase charging boot
#define BOOT_1P_RELAY   26         // Relay pin for single-phase charging boot
#define CAR_RELAY       27         // Relay pin for car charging
#define BUTTON_3P_PIN   32         // Pin for 3-phase charging button
#define BUTTON_1P_PIN   33         // Pin for single-phase charging button
#define BUTTON_CAR_PIN  35         // Pin for car charging button
byte startCardUID[4] = {0};

//_____________________________________________________________________________

// De kaart UID's die geregistreerd zijn in het programma
byte registeredCards[2][4] = {
  {0x14, 0x84, 0xAA, 0x5E},
  {0xB9, 0xFD, 0x79, 0xE2}
};

// De RFID-RC522-lezer initialiseren
MFRC522 mfrc522(SS_PIN, RST_PIN);

//________________________________________________________________________________________________________________________________________________

// De 4X20 LCD schem initialiseren
LiquidCrystal_I2C lcd(I2C_ADDR, LCD_COLUMNS, LCD_ROWS);                 //SCHERM

void setup() {
  Serial.begin(115200);
  SPI.begin();
  mfrc522.PCD_Init();


  Wire.begin();                                                         //test
  lcd.begin(20, 4);
  lcd.init();                                                           //SCHERM
  lcd.noCursor();                                                       //test
  lcd.backlight();
  lcd.setCursor(0, 0);
  lcd.clear();                                                        //test deze eens


  // Schrijf alle uitgangen eerst laag*
  digitalWrite(BOOT_3P_RELAY, LOW);
  digitalWrite(BOOT_1P_RELAY, LOW);
  digitalWrite(CAR_RELAY, LOW);

  // Defineer pinnen
  pinMode(BOOT_3P_RELAY, OUTPUT);
  pinMode(BOOT_1P_RELAY, OUTPUT);
  pinMode(CAR_RELAY, OUTPUT);

  pinMode(BUTTON_3P_PIN, INPUT_PULLUP);
  pinMode(BUTTON_1P_PIN, INPUT_PULLUP);
  pinMode(BUTTON_CAR_PIN, INPUT_PULLUP);

  delay(200);
  Serial.println("Scan uw kaart");
  //lcd.print("Scan uw kaart");                                         //SCHERM
}
//_________________________________________________________________________________________________________________________________________________

void loop() {
  // Controleren of een kaart aanwezig is
  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {
    // Get the UID of the card
    byte cardUID[4];
    for (byte i = 0; i < 4; i++) {
      cardUID[i] = mfrc522.uid.uidByte[i];
    }
    // Toon de UID van de kaart
    Serial.printf("Kaart UID: %02X %02X %02X %02X\n", cardUID[0], cardUID[1], cardUID[2], cardUID[3]);
    //lcd.clear();                                                                                                       //SCHERM
    //lcd.print("Kaart UID: %02X %02X %02X %02X\n", cardUID[0], cardUID[1], cardUID[2], cardUID[3]");                    //SCHERM

    // Controleren of de kaart geregistreerd is
    bool isRegistered = false;
    for (byte i = 0; i < 2; i++) {
      if (memcmp(cardUID, registeredCards[i], 4) == 0) {
        isRegistered = true;
        memcpy(startCardUID, cardUID, 4);
        break;
      }
    }
    if (!isRegistered) {
      Serial.println("Deze kaart is niet geregistreerd.");
      lcd.clear();                                                              // test deze afhankelijk van de vorige actie gebruik ln of geen ln
      lcd.print("Deze kaart is niet geregistreerd.");                           //SCHERM
      lcd.scrollDisplayLeft();                                                  //SCHERM
      delay(200);                                                               //SCHERM

      mfrc522.PICC_HaltA();
      mfrc522.PCD_StopCrypto1();
      return;
    }
    //________________________________________________________________

    // Wachten tot de gebruiker een laadoptie selecteert
    Serial.println("Selecteer een optie:");
    lcd.clear();
    lcd.println("Selecteer een optie:");

    Serial.println("1: 3 fasig laden (boot)");
    lcd.println("1: 3 fasig laden (boot)");

    Serial.println("2: Enkelfasig laden (boot)");
    lcd.println("2: Enkelfasig laden (boot)");

Serial.println("3: Laden (auto)");
lcd.println("3: Laden (auto)");

    bool optionSelected = false;
    byte selectedOption = 0;
    while (!optionSelected) {
    if (digitalRead(BUTTON_3P_PIN) == LOW) {
    selectedOption = 1;
    optionSelected = true;
  }
    else if (digitalRead(BUTTON_1P_PIN) == LOW) {
    selectedOption = 2;
    optionSelected = true;
  }
    else if (digitalRead(BUTTON_CAR_PIN) == LOW) {
    selectedOption = 3;
    optionSelected = true;
  }
  }
    // Activeer het juiste relais volgens gekozen optie
    switch (selectedOption) {
    case 1:
    digitalWrite(BOOT_3P_RELAY, HIGH);
    Serial.println("3 fasig laden (boot) is ingeschakeld.");
    lcd.clear();                                                              //SCHERM
    lcd.print("3 fasig laden (boot) is ingeschakeld.");                       //SCHERM
    lcd.scrollDisplayLeft();                                                  //SCHERM
    delay(200);                                                               //SCHERM
    Serial.println("Scan dezelfde kaart om het laden te stoppen.");
    lcd.clear();                                                              //SCHERM
    lcd.print("Scan dezelfde kaart om het laden te stoppen.");                //SCHERM
    lcd.scrollDisplayLeft();                                                  //SCHERM
    delay(200);                                                               //SCHERM
    break;
    case 2:
    digitalWrite(BOOT_1P_RELAY, HIGH);
    Serial.println("Enkelfasig laden (boot) is ingeschakeld.");
    lcd.clear();                                                              //SCHERM
    lcd.print("Enkelfasig laden (boot) is ingeschakeld.");                    //SCHERM
    lcd.scrollDisplayLeft();                                                  //SCHERM
    delay(200);                                                               //SCHERM
    Serial.println("Scan dezelfde kaart om het laden te stoppen.");
    lcd.clear();                                                              //SCHERM
    lcd.print("Scan dezelfde kaart om het laden te stoppen.");                //SCHERM
    lcd.scrollDisplayLeft();                                                  //SCHERM
    delay(200);                                                               //SCHERM
    break;
    case 3:
    digitalWrite(CAR_RELAY, HIGH);
    Serial.println("Laden (auto) is ingeschakeld.");
    lcd.clear();                                                              //SCHERM
    lcd.print("Laden (auto) is ingeschakeld.");                               //SCHERM
    lcd.scrollDisplayLeft();                                                  //SCHERM
    delay(200);                                                               //SCHERM
    Serial.println("Scan dezelfde kaart om het laden te stoppen.");
    lcd.clear();                                                              //SCHERM
    lcd.print("Scan dezelfde kaart om het laden te stoppen.");                //SCHERM
    lcd.scrollDisplayLeft();                                                  //SCHERM
    delay(200);                                                               //SCHERM
    break;
  }
    //________________________________________________________________________________________________________

    byte previousUid[mfrc522.uid.size] = {0}; // variabele om UID van de vorige kaart op te slaan
    bool firstCardScanned = false; // vlag om bij te houden of de eerste kaart is gescand
    bool isCharging = true;
    //byte previousUid[10] = {0}; // variabele om UID van de vorige kaart op te slaan
    while (isCharging) {
    if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {
    // Een kaart is gedetecteerd
    byte currentUid[10];
    memcpy(currentUid, mfrc522.uid.uidByte, mfrc522.uid.size); // kopieer de UID van de huidige kaart

    if (memcmp(currentUid, startCardUID, mfrc522.uid.size) == 0) {
    // De huidige kaart is dezelfde als de kaart die het laden startte
    Serial.println("Dezelfde kaart is gescand. Het laden is gestopt.");
    lcd.clear();                                                              //SCHERM
    lcd.print("Dezelfde kaart is gescand. Het laden is gestopt.");            //SCHERM
    lcd.scrollDisplayLeft();                                                  //SCHERM
    delay(200);                                                               //SCHERM

    isCharging = false;
    break; // verlaat de lus
  } else if (memcmp(currentUid, previousUid, mfrc522.uid.size) != 0) {
    // De huidige kaart is niet dezelfde als de vorige kaart
    Serial.println("Onjuiste kaart. Scan dezelfde kaart om het laden te stoppen.");
    lcd.clear();                                                              //SCHERM
    lcd.print("Dezelfde kaart is gescand. Het laden is gestopt.");            //SCHERM
    lcd.scrollDisplayLeft();                                                  //SCHERM
    delay(200);                                                               //SCHERM
    memcpy(previousUid, currentUid, mfrc522.uid.size); // sla de UID van de huidige kaart op
  }
  }
  }

    //_____________________________________________________________________________________________________

    // Deactiveer het relais
    switch (selectedOption) {
    case 1:
    digitalWrite(BOOT_3P_RELAY, LOW);
    Serial.println("3 fasig laden (boot) is uitgeschakeld.");
    lcd.clear();                                                              //SCHERM
    lcd.print("3 fasig laden (boot) is uitgeschakeld.");                      //SCHERM
    lcd.scrollDisplayLeft();                                                  //SCHERM
    delay(200);                                                               //SCHERM
    break;
    case 2:
    digitalWrite(BOOT_1P_RELAY, LOW);
    Serial.println("Enkelfasig laden (boot) is uitgeschakeld.");
    lcd.clear();                                                              //SCHERM
    lcd.print("Enkelfasig laden (boot) is uitgeschakeld.");                   //SCHERM
    lcd.scrollDisplayLeft();                                                  //SCHERM
    delay(200);                                                               //SCHERM
    break;
    case 3:
    digitalWrite(CAR_RELAY, LOW);
    Serial.println("Laden (auto) is uitgeschakeld.");
    lcd.clear();                                                              //SCHERM
    lcd.print("Laden (auto) is uitgeschakeld.");                              //SCHERM
    lcd.scrollDisplayLeft();                                                  //SCHERM
    delay(200);                                                               //SCHERM
    break;
  }


    // De kaart stoppen en crypto stoppen
    mfrc522.PICC_HaltA();
    mfrc522.PCD_StopCrypto1();
  }
  }
